version: '3'
services:
  volumes-provisioner:
    image: hasnat/volumes-provisioner
    environment:
      PROVISION_DIRECTORIES: "${USER_ID}:${USER_ID}:0777:/files;${USER_ID}:${USER_ID}:0777:/mongo_db;${USER_ID}:${USER_ID}:0777:/mongo_log;${USER_ID}:${USER_ID}:0777:/app_log;${USER_ID}:${USER_ID}:0777:/fe_log"
    volumes:
      - "./files:/files"
      - "./files/mongo_db:/mongo_db"
      - "./files/mongo_log:/mongo_log"
      - "./files/app_log:/app_log"
      - "./files/fe_log:/fe_log"
    network_mode: none
  database:
    depends_on:
      - volumes-provisioner
    image: mongo:latest
    restart: always
    volumes:
      - "./files/mongo_db:/db"
      - "./files/mongo_log:/log"
    ports:
      - "27017:27017"
    command: --logpath=/log/mongo.log --dbpath=/db #--auth
    network_mode: host
  backend:
    depends_on:
      - database
    build:
      context: ./
      dockerfile: ./Dockerfile_backend
    restart: always
    env_file:
      - ./env/backend
    ports:
      - "3000:3000"
      - "4000:4000"
    environment:
      WAIT_HOSTS: localhost:27017
    volumes:
      - "./files/app_log:/app_log"
    command: sh -c "/wait && eval `ssh-agent -s` && pm2-runtime process.yml"
    network_mode: host
  frontend:
    depends_on:
      - backend
    build:
      context: ./
      dockerfile: ./Dockerfile_frontend
    ports:
      - "5000:5000"
      - "443:443"
    environment:
      WAIT_HOSTS: localhost:3000, localhost:4000
    volumes:
      - "./files/fe_log:/fe_log"
    network_mode: host
    command: sh -c "/wait && cd /frontend && yarn dev"