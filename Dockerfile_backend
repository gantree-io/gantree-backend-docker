
# Base alpine image with node and npm preinstalled
FROM node:lts-alpine3.11

# Add docker-compose-wait tool
ENV WAIT_VERSION 2.7.2
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/$WAIT_VERSION/wait /wait
RUN chmod +x /wait

# Get packages
RUN apk update && \
    apk add --update curl jq bash ca-certificates git openssl \
    unzip wget build-base jpeg-dev zlib-dev libffi-dev \
    openssl-dev git openssh-client sshpass python3 python3-dev

# alias python3 as python
RUN ln -s /usr/bin/python3 /usr/bin/python

# Install pm2
RUN npm install -g pm2

# Install ansible
RUN pip3 install --upgrade pip
ENV LIBRARY_PATH=/lib:/usr/lib
WORKDIR /ansible
VOLUME [ "/ansible" ]
ARG ANSIBLE_VERSION=2.9
RUN pip install ansible==$ANSIBLE_VERSION
WORKDIR /home

# Setup python requirements
COPY ./include/python_requirements.txt python_requirements.txt
RUN pip3 install -r python_requirements.txt

ARG GANTREE_BACKEND_REPO=https://github.com/flex-dapps/gantree-backend.git
ARG GANTREE_BACKEND_COMMIT=16ee1e8346f0e7176e1dd2e7462e420b8ac2d017
RUN git clone $GANTREE_BACKEND_REPO /app
RUN git -C /app checkout $GANTREE_BACKEND_COMMIT
RUN yarn --cwd /app

# Setup ansible role requirements
COPY ./include/ansible_requirements.yml ansible_requirements.yml
RUN ansible-galaxy install \
    -p /usr/share/ansible/roles \
    -r ansible_requirements.yml

# Start ssh-agent, TODO(ryan): remove this once ssh-add is removed from CLI/Lib
RUN eval `ssh-agent -s`

# Setup inventory path
RUN mkdir /inventory
RUN chmod 0777 /inventory
ENV GANTREE_OVERRIDE_INVENTORY_PATH=/inventory

# Setup host control path
RUN mkdir /control
RUN chmod 0777 /control
ENV GANTREE_CONTROL_PATH=/control

# Copy backend process file
COPY ./include/process_backend.yml process.yml

# Copy backend env file
COPY ./env/backend /app/.env

# Setup ansible config file
COPY ./include/ansible.cfg ansible.cfg
ENV ANSIBLE_CONFIG=ansible.cfg

# Run gantree-cli
CMD ["pm2-runtime", "process.yml"]